<?php
    $a = 5;
    $b = '05';

    var_dump($a == $b);         // Почему true?

    В отличии от JavaScript, PHP стремится приравнять типы значений переменных к числу, проверим явным указанием типа
    переменной var_dump ((int) $b); в итоге получаем значение 5. Почему конкретно отбрасывается 0, увы, не удалось
    разобраться окончательно, есть предположение что переменная "$b" так же как и в JavaScript представляет собой массив
    0-й элемент которого имеет значение NULL так как var_dump (NULL == 0) вернет TRUE а при выполнении программы идет
    поиск первого попавшегося числа и в данном случае это число 5. Строгого сравнения нет значит берем только значения
    5 = 5 = TRUE.

    var_dump((int)'012345');     // Почему 12345?

    Та же ситуация, преобразование в целое число с явным указанием типа, отбрасывается ноль и в результате число формируется
    с первого значения не равного 0 или NULL.

    var_dump((float)123.0 === (int)123.0); // Почему false?

    Явное указание типов значений + строгое равенство, float - дробное число, int - целое число, еще на моменте сравнения
    типов возвращается FALSE и даже если бы это каким-то образом прошло, то при сравнении значений в итоге все равно будет
    FALSE так как float оставит 123.0 а int оставит только целую часть.

    var_dump((int)0 === (int)'hello, world'); // Почему true?

    Строгое равенство, но при этом явно указаны типы значений и они совпадают, так как приведение (int)'hello, world'
    к целому числу в котором чисел нет вернет 0 получаем 0 = 0 + типы совпадают = TRUE.
?>